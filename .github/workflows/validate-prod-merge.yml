name: Validate E2E Before Prod Merge

on:
  pull_request:
    branches:
      - prod
    types: [opened, synchronize, reopened]

jobs:
  validate-e2e-status:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get latest commit from source branch
        id: get_commit
        run: |
          echo "commit_sha=${{ github.event.pull_request.head.sha }}" >> $GITHUB_OUTPUT

      - name: Check E2E status for commit
        id: check_e2e
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: statuses } = await github.rest.repos.listCommitStatusesForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: '${{ steps.get_commit.outputs.commit_sha }}'
            });
            
            const e2eStatus = statuses.find(status => status.context === 'Agents-UI E2E');
            
            if (!e2eStatus) {
              core.setFailed('❌ No E2E test status found. Please ensure staging deployment has triggered E2E tests.');
              return;
            }
            
            if (e2eStatus.state !== 'success') {
              core.setFailed(`❌ E2E tests must pass before merging to prod. Current status: ${e2eStatus.state} - ${e2eStatus.description}`);
              return;
            }
            
            console.log('✅ E2E tests have passed. Merge to prod is allowed.');

      - name: Post success comment
        if: success()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ E2E validation passed! This PR is ready to merge to prod.'
            });
