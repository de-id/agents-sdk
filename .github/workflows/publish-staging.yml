name: Publish Staging (@d-id/client-sdk-staging)

on:
  push:
    branches:
      - main

jobs:
  bump-version-and-publish-staging:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org/'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build package (production mode)
        run: yarn build
        continue-on-error: false

      - name: Create staging version identifier
        id: staging_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          STAGING_VERSION="${CURRENT_VERSION}-staging.$(date +%Y%m%d%H%M%S)"
          echo "version=$STAGING_VERSION" >> $GITHUB_OUTPUT
          echo "base_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Swap package name to @d-id/client-sdk-staging (temp)
        run: |
          cp package.json package.json.bak
          jq --arg version "${{ steps.staging_version.outputs.version }}" '.name = "@d-id/client-sdk-staging" | .version = $version' package.json > package.tmp.json && mv package.tmp.json package.json

      - name: Publish to NPM (staging)
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: yarn publish --access public
        continue-on-error: false

      - name: Revert package name after publish
        run: mv package.json.bak package.json
        if: always()

      - name: Dispatch E2E tests to agents-ui
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PAT_FOR_DISPATCH }}
          repository: de-id/agents-ui
          event-type: run-e2e-for-sdk-pr
          client-payload: |
            {
              "sdk_version": "${{ steps.staging_version.outputs.version }}",
              "sdk_pr_sha": "${{ github.sha }}",
              "sdk_repo_full": "${{ github.repository }}"
            }
